version: '3'
services:
  app-flask:
    container_name: 'app-flask'
    build:
      context: .
      dockerfile: app-flask/Dockerfile
    depends_on:
      - mongodb
      - rabbitmq
    restart: always
    networks:
      - internalnet

  load_balancer:
    container_name: load_balancer
    image: nginx:latest
    volumes:
      - ./load-balancer/load-balancer.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app-react-1
      - app-react-2
      - app-react-3
    ports:
      - '8080:80'
    networks:
      - internalnet

  app-react-1:
    container_name: 'app-react-1'
    build:
      context: .
      dockerfile: app-react/Dockerfile
    ports:
      - '3001:80'
    depends_on:
      - app-flask
    restart: always
    volumes:
      - ./app-react:/app
    networks:
      - internalnet

  app-react-2:
    container_name: 'app-react-2'
    build:
      context: .
      dockerfile: app-react/Dockerfile
    ports:
      - '3002:80'
    depends_on:
      - app-flask
    restart: always
    volumes:
      - ./app-react:/app
    networks:
      - internalnet

  app-react-3:
    container_name: 'app-react-3'
    build:
      context: .
      dockerfile: app-react/Dockerfile
    ports:
      - '3003:80'
    depends_on:
      - app-flask
    restart: always
    volumes:
      - ./app-react:/app
    networks:
      - internalnet

  app-email:
    container_name: 'app-email'
    build:
      context: .
      dockerfile: app-email/Dockerfile
    environment:
      GMAIL_APP_PASSWORD: ''
      GMAIL_APP_USER: 'swiftlyshop021@gmail.com'
    depends_on:
      - mongodb
      - rabbitmq
    restart: always
    networks:
      - internalnet


  rabbitmq:
    image: 'rabbitmq:3.8'
    container_name: 'rabbitmq'
    ports:
      - '5672:5672'
    restart: always
    networks:
      - internalnet

  minio:
    image: quay.io/minio/minio:RELEASE.2022-02-18T01-50-10Z
    container_name: 'minio'
    volumes:
      - ./data-1:/data-1
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      MINIO_ROOT_USER: 'minio_user'
      MINIO_ROOT_PASSWORD: 'minio_password'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    command: minio server /data-1
    networks:
      - internalnet

  mongodb:
    image: 'mongo:latest'
    container_name: 'mongodb'
    ports:
      - '27017:27017'
    networks:
      - internalnet

  app-recommender:
    container_name: 'app-recommender'
    build:
      context: .
      dockerfile: app-recommender/Dockerfile
    depends_on:
      - mongodb
      - rabbitmq
    restart: always
    networks:
      - internalnet

networks:
  internalnet:
    driver: bridge
